<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.memory.framework</groupId>
	<artifactId>platform-root</artifactId>
	<version>3.0.0</version>
	<packaging>pom</packaging>

	<name>platform-root</name>
	<url>http://maven.apache.org</url>

	<properties>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- 主要依赖库的版本定义 -->
		<spring.version>4.3.5.RELEASE</spring.version>
		<spring.security.version>4.2.2.RELEASE</spring.security.version>
		<hibernate.version>4.2.7.SP1</hibernate.version>
		<fasterxml.jackson.version>2.8.0</fasterxml.jackson.version>
		<druid.version>1.0.0</druid.version>

		<google.guava.version>20.0</google.guava.version>

		<!-- 辅助依赖包 -->
		<aspectj.version>1.8.9</aspectj.version>
		
		<!-- 工具包 -->
		<slf4j.version>1.7.25</slf4j.version>
		<logback.version>1.2.1</logback.version>
		<cxf.version>2.7.18</cxf.version>
		<json.version>20160810</json.version>
		<httpclient.version>4.5.2</httpclient.version>
		<commons.httpclient.version>3.0.1</commons.httpclient.version>
		<commons.codec.version>1.5</commons.codec.version>
		<commons.fileupload.version>1.2.2</commons.fileupload.version>

		<!-- 数据库组件包 -->
		<mysql.driver.version>5.1.41</mysql.driver.version>

		<!-- 测试依赖包 -->
		<junit.version>4.12</junit.version>
		<mockito.version>1.9.5</mockito.version>
		<powermock.version>1.5</powermock.version>
		<selenium.version>2.28.0</selenium.version>
		<jetty.version>7.6.8.v20121106</jetty.version>
		<poi-ooxml-schemas.version>3.9</poi-ooxml-schemas.version>
		<poi-ooxml.version>3.9</poi-ooxml.version>
		<poi-scratchpad.version>3.9</poi-scratchpad.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- 加入junit依赖包 -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- 与web容器相关的包 ，注意一些scope应该设置为 provided begin -->
			<!-- 加入jstl依赖包 -->
			<dependency>
				<groupId>jstl</groupId>
				<artifactId>jstl</artifactId>
				<version>1.2</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>2.2.1-b03</version>
				<scope>provided</scope>
			</dependency>
			<!-- servlet -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.5</version>
				<scope>provided</scope>
			</dependency>
			<!-- 与web容器相关的包 end -->

			<!-- 加入mysql驱动依赖包 -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.driver.version}</version>
			</dependency>

			<!-- 加入druid数据源依赖包 -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>${druid.version}</version>
			</dependency>

			<!-- spring相关包 begin -->
			<!-- spring-context-support已包含了大部分的spring依赖 -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- 加入orm依赖包 -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- 加入spring测试依赖包 -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- 加入spring mvc依赖包 -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- 加入spring jdbc依赖包 ,activity也需要用到 -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- spring相关包 end -->

			<!-- 加入hibernate相关包 begin -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<!-- 加入hibernate相关包 end -->



			<!-- cxf begin -->
			<!-- 加入CXF依赖包 -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>${cxf.version}</version>
				<!-- <exclusions> <exclusion> <artifactId>asm</artifactId> <groupId>asm</groupId> 
					</exclusion> </exclusions> -->
			</dependency>
			<!-- cxf的http支持 -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-api</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http-jetty</artifactId>
				<version>${cxf.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<!-- cxf end -->

			<!-- 加入dom4j依赖包 begin -->
			<dependency>
				<groupId>dom4j</groupId>
				<artifactId>dom4j</artifactId>
				<version>1.6.1</version>
			</dependency>
			<dependency>
				<groupId>jaxen</groupId>
				<artifactId>jaxen</artifactId>
				<version>1.1.4</version>
			</dependency>
			<!-- 加入dom4j依赖包 end -->

			<!-- apache 相关包 begin -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.1</version>
			</dependency>
			<!-- io包 -->
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>
			<!-- 加入fileupload依赖包 -->
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>1.3</version>
			</dependency>
			<!-- 加入POI核心依赖 -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>3.10-beta2</version>
			</dependency>
			<!-- 为POI支持Office Open XML -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>3.10-beta2</version>
			</dependency>
			<!-- 支持Word文档的操作 -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-scratchpad</artifactId>
				<version>3.10-beta2</version>
			</dependency>
			<!-- dbutils依赖包 -->
			<dependency>
				<groupId>commons-dbutils</groupId>
				<artifactId>commons-dbutils</artifactId>
				<version>1.5</version>
			</dependency>
			<!-- 加入batik依赖包，用于highcharts导出图表 -->
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-codec</artifactId>
				<version>1.7</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>1.8.3</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- apache 相关包 end -->

			<!-- 其它相关依赖 begin -->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${aspectj.version}</version>
				<scope>runtime</scope>
			</dependency>
			<!-- 加入ehcache -->
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache</artifactId>
				<version>2.7.4</version>
			</dependency>
			<!-- <dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>1.9.13</version>
			</dependency> -->

			<!-- fasterxml.jackson -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${fasterxml.jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${fasterxml.jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${fasterxml.jackson.version}</version>
			</dependency>

			<!-- 加入fastjson依赖包 -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>1.1.37</version>
			</dependency>
			<!-- velocity模板引擎 -->
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity</artifactId>
				<version>1.7</version>
			</dependency>
			<!-- 加入javamelody依赖包 -->
			<dependency>
				<groupId>net.bull.javamelody</groupId>
				<artifactId>javamelody-core</artifactId>
				<version>1.47.0</version>
			</dependency>
			<!-- 加入quartz依赖包 -->
			<dependency>
				<groupId>org.opensymphony.quartz</groupId>
				<artifactId>quartz-all</artifactId>
				<version>1.6.1</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.3</version>
			</dependency>

			<dependency>
				<groupId>com.google.code</groupId>
				<artifactId>kaptcha</artifactId>
				<version>2.3.2</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${google.guava.version}</version>
			</dependency>
			<!-- 其它相关依赖 end -->

			<!-- spring data access -->
			<!-- <dependency> <groupId>org.springframework.data</groupId> <artifactId>spring-data-jpa</artifactId> 
				<version>1.3.4.RELEASE</version> <exclusions> <exclusion> <groupId>junit</groupId> 
				<artifactId>junit-dep</artifactId> </exclusion> </exclusions> </dependency> -->
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- slf4j相关包 begin -->
		<!-- 加入slf4j与log4j依赖包 <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-log4j12</artifactId> 
			<version>1.7.5</version> </dependency> -->
		<!-- slfj 与 logback -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-access</artifactId>
			<version>${logback.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<!-- slf4j相关包 end -->
	</dependencies>

	<modules>
		<module>modules/memory-common</module>
		<module>modules/memory-hibernate4</module>
		<module>modules/memory-core</module>
	</modules>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>